---
import { Image } from "astro:assets";

const { pathname } = Astro.url;

let links: string[];
const linkNames = ["Home", "About", "Projects", "Services"];

if (pathname == "/") {
  links = ["#home", "#about", "#projects", "#services"];
} else {
  links = ["/", "/#about", "/projects", "/#services"];
}
---

<header
  class="max-w-screen-lg mx-auto flex flex-wrap justify-between py-1 px-4 sm:px-6 items-center sticky top-0 z-50 lg:rounded-b-md border border-gray-300 dark:border-neutral-800 backdrop-blur-xs"
>
  <a href="/">
    <Image
      src="/logo.webp"
      class="size-16 object-contain object-center bg-transparent"
      alt="Logo"
      width={64}
      height={64}
      title="Logo"
      aria-label="Logo"
      loading="eager"
    />
  </a>
  <div class="sm:order-2 flex items-center gap-3 text-gray-900">
    <button
      title="Theme Toggle"
      aria-label="Theme Toggle"
      id="theme-toggle"
      class="flex items-center gap-2 dark:text-white"
    >
      <svg
        id="theme-sun-icon"
        class="size-5"
        aria-label="Sun Icon"
        fill="currentColor"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 512 512"
      >
        <path
          d="M361.5 1.2c5 2.1 8.6 6.6 9.6 11.9L391 121l107.9 19.8c5.3 1 9.8 4.6 11.9 9.6s1.5 10.7-1.6 15.2L446.9 256l62.3 90.3c3.1 4.5 3.7 10.2 1.6 15.2s-6.6 8.6-11.9 9.6L391 391 371.1 498.9c-1 5.3-4.6 9.8-9.6 11.9s-10.7 1.5-15.2-1.6L256 446.9l-90.3 62.3c-4.5 3.1-10.2 3.7-15.2 1.6s-8.6-6.6-9.6-11.9L121 391 13.1 371.1c-5.3-1-9.8-4.6-11.9-9.6s-1.5-10.7 1.6-15.2L65.1 256 2.8 165.7c-3.1-4.5-3.7-10.2-1.6-15.2s6.6-8.6 11.9-9.6L121 121 140.9 13.1c1-5.3 4.6-9.8 9.6-11.9s10.7-1.5 15.2 1.6L256 65.1 346.3 2.8c4.5-3.1 10.2-3.7 15.2-1.6zM160 256a96 96 0 1 1 192 0 96 96 0 1 1 -192 0zm224 0a128 128 0 1 0 -256 0 128 128 0 1 0 256 0z"
        ></path></svg
      >
      <svg
        id="theme-moon-icon"
        class="size-5"
        aria-label="Moon Icon"
        fill="currentColor"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 384 512"
      >
        <path
          d="M223.5 32C100 32 0 132.3 0 256S100 480 223.5 480c60.6 0 115.5-24.2 155.8-63.4c5-4.9 6.3-12.5 3.1-18.7s-10.1-9.7-17-8.5c-9.8 1.7-19.8 2.6-30.1 2.6c-96.9 0-175.5-78.8-175.5-176c0-65.8 36-123.1 89.3-153.3c6.1-3.5 9.2-10.5 7.7-17.3s-7.3-11.9-14.3-12.5c-6.3-.5-12.6-.8-19-.8z"
        ></path></svg
      >
    </button>
    <button
      title="Navbar Toggle"
      aria-label="Navbar Toggle"
      id="navbar-toggle"
      class="sm:hidden dark:text-white"
    >
      <svg
        aria-label="Menu Icon"
        id="navbar-menu-icon"
        class="size-5"
        fill="currentColor"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 448 512"
      >
        <path
          d="M0 96C0 78.3 14.3 64 32 64l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 128C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 288c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32L32 448c-17.7 0-32-14.3-32-32s14.3-32 32-32l384 0c17.7 0 32 14.3 32 32z"
        ></path></svg
      >
      <svg
        aria-label="Close Menu Icon"
        id="navbar-x-icon"
        class="hidden size-6"
        fill="currentColor"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 384 512"
      >
        <path
          d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"
        ></path></svg
      >
    </button>
  </div>
  <nav
    id="navbar"
    class="hidden -translate-y-[200%] transition-transform p-4 sm:block sm:translate-y-0 sm:static sm:p-0 w-full sm:w-auto text-sm lg:text-base"
  >
    <ul
      class="flex flex-col items-center gap-4 lg:gap-6 border border-dashed border-gray-500 rounded-md font-semibold text-gray-500 p-4 sm:p-2 sm:border-none sm:bg-transparent sm:flex-row"
    >
      {
        links.map((link, i) => (
          <li>
            <a
              href={link}
              class="hover:text-gray-950 dark:hover:text-white dark:text-gray-400"
            >
              {linkNames[i]}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>
<script is:inline>
  const navbar = document.getElementById("navbar");
  const navbarToggle = document.getElementById("navbar-toggle");
  const navbarXIcon = document.getElementById("navbar-x-icon");
  const navbarMenuIcon = document.getElementById("navbar-menu-icon");

  if (navbarToggle instanceof HTMLButtonElement) {
    navbarToggle.addEventListener("click", () => {
      navbarXIcon.classList.toggle("hidden");
      navbarMenuIcon.classList.toggle("hidden");

      navbar.classList.toggle("hidden");

      setTimeout(() => {
        navbar.classList.toggle("-translate-y-[200%]");
      });
    });
  }

  const themeToggle = document.getElementById("theme-toggle");
  const themeMoonIcon = document.getElementById("theme-moon-icon");
  const themeSunIcon = document.getElementById("theme-sun-icon");

  const isDarkColorThemeSet =
    "color-theme" in localStorage &&
    localStorage.getItem("color-theme") === "dark";
  const userPrefersDarkTheme =
    window.matchMedia("(prefers-color-scheme: dark)").matches &&
    !("color-theme" in localStorage);

  if (isDarkColorThemeSet || userPrefersDarkTheme) {
    setDarkTheme();
  } else {
    setLightTheme();
  }

  if (themeToggle instanceof HTMLButtonElement) {
    themeToggle.addEventListener("click", () => {
      const colorTheme = localStorage.getItem("color-theme");

      if (colorTheme === "dark") {
        setLightTheme();
      } else {
        setDarkTheme();
      }
    });
  }

  function setLightTheme() {
    document.documentElement.classList.remove("dark");
    localStorage.setItem("color-theme", "light");

    themeMoonIcon.classList.remove("hidden");
    themeSunIcon.classList.add("hidden");
  }

  function setDarkTheme() {
    localStorage.setItem("color-theme", "dark");
    document.documentElement.classList.add("dark");

    themeMoonIcon.classList.add("hidden");
    themeSunIcon.classList.remove("hidden");
  }
</script>
